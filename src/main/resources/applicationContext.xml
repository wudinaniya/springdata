<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">


	<!-- 导入数据库的配置信息,注意这个标签只能出现一次, 导入一个匹配文件 
		 若想导入多个配置文件可以将 db.properties写成 *.properties
	-->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- 扫包(让spring扫描含有注解类:service注解),扫描包的目的是为了创建对象 -->
	<context:component-scan base-package="com.qx.springdata"></context:component-scan>

	<!-- 配置JPA要用到的dataSource -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- 配置 entityManagerFactory-->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置jpa的具体实现 -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
		</property>
		<!-- 配置扫描包,扫描所有带有jpa注解的类(就是entity注解) -->
		<property name="packagesToScan" value="com.qx.springdata"></property>
		
		
		<!-- 配置具体实现的相关配置(因为指定了具体实现是hibernate,因此也需要为hibernate进行相关的配置) -->
		<!-- JPA和JDBC一样是规范,你需要给它指定一个具体的实现 -->
		<property name="jpaProperties">
			<props>
					<prop key="hibernate.show_sql">true</prop>
					<prop key="hibernate.format_sql">true</prop>
					<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		
		</property>
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>
	
	<!-- 注解驱动:扫描带有@Transaction注解的类或方法 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 配置扫描springdata 扫描的是继承自Repository接口的接口 (接口可以多继承) 目的:扫描jpa注解 -->
	<jpa:repositories base-package="com.qx.springdata" entity-manager-factory-ref="entityManagerFactory"></jpa:repositories>
</beans>
